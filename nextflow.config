/*
 * -------------------------------------------------
 * Nextflow config file for Sarek
 * -------------------------------------------------
 * Default config options for all environments.
 * Cluster-specific config options should be saved
 * in the configuration folder and imported under a
 * profile name here.
 */

manifest {
  author = 'Maxime Garcia'
  description = 'Build AWS iGenomes'
  homePage = 'https://github.com/MaxUlysse/AWS-iGenomes-build'
  mainScript = 'main.nf'
  name = 'AWS-iGenomes-build'
  nextflowVersion = '>=18.10.1'
  version = '0.5'
}

env {
  NXF_OPTS="-Xms1g"
}

docker {
  enabled = true
  fixOwnership = true
  runOptions = "-u \$(id -u):\$(id -g)"
}

process.container = "maxulysse/awsigenomesbuild:0.5"

// Function to ensure that resource requirements don't go beyond
// a maximum limit
def check_max(obj, type) {
  if(type == 'memory'){
    try {
      if(obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
        return params.max_memory as nextflow.util.MemoryUnit
      else
        return obj
    } catch (all) {
      println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
      return obj
    }
  } else if(type == 'time'){
    try {
      if(obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
        return params.max_time as nextflow.util.Duration
      else
        return obj
    } catch (all) {
      println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
      return obj
    }
  } else if(type == 'cpus'){
    try {
      return Math.min( obj, params.max_cpus as int )
    } catch (all) {
      println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
      return obj
    }
  }
}
